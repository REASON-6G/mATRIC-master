services:
  influxdb:
    image: influxdb:2
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - app-influxdb-data:/var/lib/influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD?Variable not set}
      - DOCKER_INFLUXDB_TOKEN=${INFLUXDB_TOKEN?Variable not set}
      - DOCKER_INFLUXDB_INIT_ORG="University of Bristol"
      - DOCKER_INFLUXDB_INIT_BUCKET=matric
      - DOCKER_INFLUXDB_URL=${INFLUXDB_URL?Variable not set}

  db:
    image: postgres:12
    restart: always
    volumes:
      - app-postgres-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USERNAME?Variable not set}
      - POSTGRES_DB=${POSTGRES_NAME?Variable not set}

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    depends_on:
      - db
      - mq
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY?Variable not set}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - RABBITMQ_HOST=${RABBITMQ_HOST?Variable not set}
      - RABBITMQ_PORT=${RABBITMQ_PORT?Variable not set}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST?Variable not set}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE?Variable not set}
      - RABBITMQ_USER=${RABBITMQ_USER?Variable not set}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}
    ports:
      - "8888:80"
    build:
      context: ./backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    platform: linux/amd64 # Patch for M1 Mac

  frontend:
    image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
    restart: always
    build:
      context: ./frontend
      args:
        - VITE_API_URL=https://${DOMAIN?Variable not set}
        - NODE_ENV=production

  mq:
    image: rabbitmq:3-management
    restart: always
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_HEARTBEAT=0

  agent:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    command: python app/rabbitmq/subscriber_agent_update.py
    depends_on:
      - db
      - mq
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN?Variable not set}
      - INFLUXDB_URL=${INFLUXDB_URL?Variable not set}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET?Variable not set}
      - INFLUXDB_ORG=${INFLUXDB_ORG?Variable not set}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY?Variable not set}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - RABBITMQ_HOST=${RABBITMQ_HOST?Variable not set}
      - RABBITMQ_PORT=${RABBITMQ_PORT?Variable not set}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST?Variable not set}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE?Variable not set}
      - RABBITMQ_USER=${RABBITMQ_USER?Variable not set}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}

  agent_command:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    command: python app/rabbitmq/subscriber_agent_command.py
    depends_on:
      - db
      - mq
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN?Variable not set}
      - INFLUXDB_URL=${INFLUXDB_URL?Variable not set}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET?Variable not set}
      - INFLUXDB_ORG=${INFLUXDB_ORG?Variable not set}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY?Variable not set}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - RABBITMQ_HOST=${RABBITMQ_HOST?Variable not set}
      - RABBITMQ_PORT=${RABBITMQ_PORT?Variable not set}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST?Variable not set}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE?Variable not set}
      - RABBITMQ_USER=${RABBITMQ_USER?Variable not set}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}

  agent_data:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    command: python app/rabbitmq/subscriber_agent_data.py
    depends_on:
      - db
      - mq
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN?Variable not set}
      - INFLUXDB_URL=${INFLUXDB_URL?Variable not set}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET?Variable not set}
      - INFLUXDB_ORG=${INFLUXDB_ORG?Variable not set}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY?Variable not set}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - RABBITMQ_HOST=${RABBITMQ_HOST?Variable not set}
      - RABBITMQ_PORT=${RABBITMQ_PORT?Variable not set}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST?Variable not set}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE?Variable not set}
      - RABBITMQ_USER=${RABBITMQ_USER?Variable not set}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}

  agent_details:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    command: python app/rabbitmq/subscriber_agent_details.py
    depends_on:
      - db
      - mq
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN?Variable not set}
      - INFLUXDB_URL=${INFLUXDB_URL?Variable not set}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET?Variable not set}
      - INFLUXDB_ORG=${INFLUXDB_ORG?Variable not set}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY?Variable not set}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - RABBITMQ_HOST=${RABBITMQ_HOST?Variable not set}
      - RABBITMQ_PORT=${RABBITMQ_PORT?Variable not set}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST?Variable not set}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE?Variable not set}
      - RABBITMQ_USER=${RABBITMQ_USER?Variable not set}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}

volumes:
  app-postgres-data:
  app-influxdb-data:
